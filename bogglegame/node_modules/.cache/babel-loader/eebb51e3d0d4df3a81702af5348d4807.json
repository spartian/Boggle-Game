{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pratik\\\\ReactFrontEnd\\\\bogglegame\\\\src\\\\components\\\\Result\\\\index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport '../../bootstrap.min.css';\nimport Game from '../Game';\nimport ScoreBox from '../ScoreBox';\nimport WordScoreList, { onButtonClick } from '../ScoreBox/WordScoreList';\nimport TotalScore, { LibraryButton } from '../ScoreBox/TotalScore';\nexport default class Result extends Component {\n  constructor(props) {\n    super();\n\n    this.hide = () => this.hideAndResetScreen();\n\n    this.state = {\n      show: true\n    };\n    this.onUpdate = this.onUpdate.bind(this);\n    this.childRef = React.createRef();\n  }\n\n  onUpdate(data) {\n    this.setState({\n      data: this.ref.current.value\n    });\n  }\n\n  componentDidMount() {\n    this.childRef.current.focus();\n  }\n\n  hideAndResetScreen() {\n    this.setState({\n      show: false\n    });\n    window.location.reload();\n  }\n\n  render() {\n    const {\n      forwardedRef,\n      ...rest\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.hide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      backdrop: \"static\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Result\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Total Number Of Valid Words Entered:  \", React.createElement(WordScoreList, {\n      ref: this.ref,\n      onUpdate: this.onUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Total Score:\")), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.hide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Close and Refresh\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Pratik/ReactFrontEnd/bogglegame/src/components/Result/index.js"],"names":["React","Component","ReactDOM","Modal","Button","Game","ScoreBox","WordScoreList","onButtonClick","TotalScore","LibraryButton","Result","constructor","props","hide","hideAndResetScreen","state","show","onUpdate","bind","childRef","createRef","data","setState","ref","current","value","componentDidMount","focus","window","location","reload","render","forwardedRef","rest"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,yBAAP;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,aAAP,IAAsBC,aAAtB,QAA0C,2BAA1C;AACA,OAAOC,UAAP,IAAmBC,aAAnB,QAAuC,wBAAvC;AACA,eAAe,MAAMC,MAAN,SAAqBV,SAArB,CAA8B;AAC3CW,EAAAA,WAAW,CAACC,KAAD,EACX;AACE;;AADF,SAsBAC,IAtBA,GAsBO,MAAM,KAAKC,kBAAL,EAtBb;;AAEE,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgBpB,KAAK,CAACqB,SAAN,EAAhB;AACD;;AAEDH,EAAAA,QAAQ,CAACI,IAAD,EAAO;AACb,SAAKC,QAAL,CAAc;AAACD,MAAAA,IAAI,EAAG,KAAKE,GAAL,CAASC,OAAT,CAAiBC;AAAzB,KAAd;AACF;;AAEAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,QAAL,CAAcK,OAAd,CAAsBG,KAAtB;AACD;;AACDb,EAAAA,kBAAkB,GAClB;AACA,SAAKQ,QAAL,CAAc;AAAEN,MAAAA,IAAI,EAAE;AAAR,KAAd;AACAY,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACC;;AAICC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,YAAD;AAAe,SAAGC;AAAlB,QAA0B,KAAKrB,KAArC;AACE,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AACA,MAAA,IAAI,EAAE,KAAKG,KAAL,CAAWC,IADjB;AAEA,MAAA,MAAM,EAAE,KAAKH,IAFb;AAGA,MAAA,IAAI,EAAC,IAHL;AAIA,yBAAgB,+BAJhB;AAKA,MAAA,QAAQ,MALR;AAMA,MAAA,QAAQ,EAAC,QANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,KAAP;AAAa,MAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CARA,EAaA,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACwC,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAI,KAAKU,GAA3B;AAAgC,MAAA,QAAQ,EAAE,KAAKN,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADxC,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,CAbA,EAsBA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKJ,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAtBA,CADA,CADF;AA+BD;;AA3DsC","sourcesContent":["import React,{Component} from 'react';  \r\nimport ReactDOM from 'react-dom'\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport '../../bootstrap.min.css';\r\nimport Game from '../Game';\r\nimport ScoreBox from '../ScoreBox'\r\nimport WordScoreList,{onButtonClick} from '../ScoreBox/WordScoreList';\r\nimport TotalScore,{LibraryButton} from '../ScoreBox/TotalScore';\r\nexport default class Result extends Component{\r\n  constructor(props) \r\n  {\r\n    super();\r\n    this.state = { \r\n      show: true\r\n    };\r\n    this.onUpdate = this.onUpdate.bind(this)\r\n    this.childRef = React.createRef();\r\n  }\r\n\r\n  onUpdate(data) {\r\n    this.setState({data : this.ref.current.value}) \r\n }\r\n\r\n  componentDidMount() {\r\n    this.childRef.current.focus();\r\n  }\r\n  hideAndResetScreen()\r\n  {\r\n  this.setState({ show: false });\r\n  window.location.reload();\r\n  }\r\n\r\n  hide = () => this.hideAndResetScreen();\r\n\r\n    render() {\r\n      const {forwardedRef, ...rest} = this.props;\r\n        return (\r\n          <div>\r\n          <Modal\r\n          show={this.state.show}\r\n          onHide={this.hide}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Result\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>\r\n              Total Number Of Valid Words Entered:  <WordScoreList ref = {this.ref} onUpdate={this.onUpdate} />\r\n            </p>\r\n            <br/>\r\n            <p>\r\n              Total Score:\r\n            </p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.hide}>Close and Refresh</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        \r\n        </div>\r\n        );\r\n      }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}