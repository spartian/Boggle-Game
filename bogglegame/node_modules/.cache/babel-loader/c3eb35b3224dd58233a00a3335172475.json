{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pratik\\\\ReactFrontEnd\\\\bogglegame\\\\src\\\\components\\\\Timer\\\\index.js\";\nimport React, { Component } from 'react';\nimport Result from '../Result';\nimport Game from '../Game';\nimport ScoreBox from '../ScoreBox';\nimport WordScoreList from '../ScoreBox/WordScoreList';\nimport TotalScore from '../ScoreBox/TotalScore';\nexport default class ClockInterface extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 60 * 0.5,\n      myInterval: undefined,\n      condition: false,\n      totalScore: this.props.words\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.handleLoad(this));\n  }\n\n  displayModalPopUp() {\n    this.setState({\n      condition: true\n    });\n    console.log(\"1\");\n  }\n\n  componentDidUpdate() {\n    if (this.state.count <= 0) {\n      clearInterval(this.state.myInterval);\n\n      if (this.state.condition === false) {\n        this.displayModalPopUp();\n      }\n    }\n  }\n\n  handleInputValue(val) {\n    alert(\"5\");\n  }\n\n  getSeconds() {\n    return ('0' + this.state.count % 60).slice(-2);\n  }\n\n  getMinutes() {\n    return Math.floor(this.state.count / 60);\n  }\n\n  handleLoad() {\n    var _this = this;\n\n    if (this.state.myInterval) {\n      return;\n    }\n\n    const myInterval = setInterval(function () {\n      _this.setState(state => ({\n        count: state.count - 1\n      }));\n    }, 1000);\n    this.setState({\n      myInterval\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"clockdigits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.getMinutes(), \":\", this.getSeconds()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.condition ? React.createElement(Result, {\n      score: this.state.TotalScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }) : null));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Pratik/ReactFrontEnd/bogglegame/src/components/Timer/index.js"],"names":["React","Component","Result","Game","ScoreBox","WordScoreList","TotalScore","ClockInterface","constructor","props","state","count","myInterval","undefined","condition","totalScore","words","componentDidMount","window","addEventListener","handleLoad","displayModalPopUp","setState","console","log","componentDidUpdate","clearInterval","handleInputValue","val","alert","getSeconds","slice","getMinutes","Math","floor","_this","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACE,eAAe,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AACpDO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KAAK,GADD;AAEXC,MAAAA,UAAU,EAAEC,SAFD;AAGXC,MAAAA,SAAS,EAAC,KAHC;AAIXC,MAAAA,UAAU,EAAC,KAAKN,KAAL,CAAWO;AAJX,KAAb;AAMD;;AAGDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,KAAKC,UAAL,CAAgB,IAAhB,CAAhC;AACH;;AAGDC,EAAAA,iBAAiB,GACjB;AACI,SAAKC,QAAL,CAAc;AAACR,MAAAA,SAAS,EAAC;AAAX,KAAd;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,QAAG,KAAKf,KAAL,CAAWC,KAAX,IAAoB,CAAvB,EAAyB;AACrBe,MAAAA,aAAa,CAAC,KAAKhB,KAAL,CAAWE,UAAZ,CAAb;;AACA,UAAG,KAAKF,KAAL,CAAWI,SAAX,KAAyB,KAA5B,EACA;AACE,aAAKO,iBAAL;AACD;AACJ;AAGJ;;AAEDM,EAAAA,gBAAgB,CAACC,GAAD,EAAM;AACpBC,IAAAA,KAAK,CAAC,GAAD,CAAL;AACD;;AACDC,EAAAA,UAAU,GAAG;AACX,WAAO,CAAC,MAAM,KAAKpB,KAAL,CAAWC,KAAX,GAAmB,EAA1B,EAA8BoB,KAA9B,CAAoC,CAAC,CAArC,CAAP;AACD;;AACDC,EAAAA,UAAU,GAAG;AACX,WAAQC,IAAI,CAACC,KAAL,CAAW,KAAKxB,KAAL,CAAWC,KAAX,GAAmB,EAA9B,CAAR;AACD;;AAEDS,EAAAA,UAAU,GAAI;AACZ,QAAIe,KAAK,GAAG,IAAZ;;AACA,QAAI,KAAKzB,KAAL,CAAWE,UAAf,EACA;AACE;AACD;;AACD,UAAMA,UAAU,GAAGwB,WAAW,CAAC,YAAW;AACxCD,MAAAA,KAAK,CAACb,QAAN,CAAeZ,KAAK,KAAK;AACvBC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AADE,OAAL,CAApB;AAGD,KAJ6B,EAI3B,IAJ2B,CAA9B;AAKA,SAAKW,QAAL,CAAc;AAACV,MAAAA;AAAD,KAAd;AACD;;AAEDyB,EAAAA,MAAM,GAAG;AACP,WAEE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,KAAKL,UAAL,EAAtB,OAA0C,KAAKF,UAAL,EAA1C,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,KAAKpB,KAAL,CAAWI,SAAX,GAAsB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAI,KAAKJ,KAAL,CAAWJ,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,GAAiE,IAD9D,CAFF,CAFF;AAWD;;AAvEmD","sourcesContent":["import React,{Component} from 'react';  \r\nimport Result from '../Result';\r\nimport Game from '../Game';\r\nimport ScoreBox from '../ScoreBox'\r\nimport WordScoreList from '../ScoreBox/WordScoreList';\r\nimport TotalScore from '../ScoreBox/TotalScore';\r\n  export default class ClockInterface extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        count: 60 * 0.5,\r\n        myInterval: undefined,\r\n        condition:false,\r\n        totalScore:this.props.words\r\n      }\r\n    };\r\n    \r\n\r\n    componentDidMount() {\r\n        window.addEventListener('load', this.handleLoad(this));\r\n    }\r\n\r\n\r\n    displayModalPopUp()\r\n    {\r\n        this.setState({condition:true});\r\n        console.log(\"1\")\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.state.count <= 0){\r\n            clearInterval(this.state.myInterval);\r\n            if(this.state.condition === false)\r\n            {\r\n              this.displayModalPopUp();\r\n            }\r\n        }\r\n    \r\n\r\n    }\r\n\r\n    handleInputValue(val) {\r\n      alert(\"5\");\r\n    }\r\n    getSeconds() {\r\n      return ('0' + this.state.count % 60).slice(-2)\r\n    };\r\n    getMinutes() {\r\n      return (Math.floor(this.state.count / 60) )\r\n    };\r\n  \r\n    handleLoad () {\r\n      var _this = this;\r\n      if (this.state.myInterval) \r\n      {\r\n        return\r\n      }\r\n      const myInterval = setInterval(function() {\r\n        _this.setState(state => ({\r\n          count: state.count - 1\r\n        }))\r\n      }, 1000)\r\n      this.setState({myInterval})\r\n    };\r\n    \r\n    render() {\r\n      return (\r\n        \r\n        <div id='container'>\r\n          <h1 id='clockdigits'>{this.getMinutes()}:{this.getSeconds()}</h1>\r\n          <div>\r\n      {this.state.condition ?<Result score = {this.state.TotalScore}/> :null}\r\n        </div>\r\n        \r\n        </div>\r\n    \r\n      );\r\n    }\r\n  }\r\n  \r\n  "]},"metadata":{},"sourceType":"module"}