{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pratik\\\\ReactFrontEnd\\\\bogglegame\\\\src\\\\components\\\\Timer\\\\index.js\";\nimport React, { Component } from 'react';\nimport Result from '../Result';\nexport default class ClockInterface extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 60 * 0.05,\n      myInterval: undefined,\n      condition: false\n    }; //   this.handleLoad  = this.handleLoad(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.handleLoad(this));\n  }\n\n  displayModalPopUp() {\n    this.setState({\n      condition: true\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.count <= 0) {\n      clearInterval(this.state.myInterval);\n\n      if (this.state.condition === false) {\n        this.displayModalPopUp();\n      }\n    }\n  }\n\n  getSeconds() {\n    return ('0' + this.state.count % 60).slice(-2);\n  }\n\n  getMinutes() {\n    return Math.floor(this.state.count / 60);\n  }\n\n  handleLoad() {\n    var _this = this;\n\n    if (this.state.myInterval) {\n      return;\n    }\n\n    const myInterval = setInterval(function () {\n      _this.setState(state => ({\n        count: state.count - 1\n      }));\n    }, 1000);\n    this.setState({\n      myInterval\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"clockdigits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.getMinutes(), \":\", this.getSeconds()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.condition ? React.createElement(Result, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }) : null));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Pratik/ReactFrontEnd/bogglegame/src/components/Timer/index.js"],"names":["React","Component","Result","ClockInterface","constructor","props","state","count","myInterval","undefined","condition","componentDidMount","window","addEventListener","handleLoad","displayModalPopUp","setState","componentDidUpdate","clearInterval","getSeconds","slice","getMinutes","Math","floor","_this","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACE,eAAe,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACpDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KAAK,IADD;AAEXC,MAAAA,UAAU,EAAEC,SAFD;AAGXC,MAAAA,SAAS,EAAC;AAHC,KAAb,CAFiB,CAOnB;AAEC;;AAGDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,KAAKC,UAAL,CAAgB,IAAhB,CAAhC;AACH;;AAGDC,EAAAA,iBAAiB,GACjB;AACI,SAAKC,QAAL,CAAc;AAACN,MAAAA,SAAS,EAAC;AAAX,KAAd;AACH;;AAEDO,EAAAA,kBAAkB,GAAE;AAChB,QAAG,KAAKX,KAAL,CAAWC,KAAX,IAAoB,CAAvB,EAAyB;AACrBW,MAAAA,aAAa,CAAC,KAAKZ,KAAL,CAAWE,UAAZ,CAAb;;AACA,UAAG,KAAKF,KAAL,CAAWI,SAAX,KAAyB,KAA5B,EACA;AACA,aAAKK,iBAAL;AACC;AACJ;AACJ;;AAEDI,EAAAA,UAAU,GAAG;AACX,WAAO,CAAC,MAAM,KAAKb,KAAL,CAAWC,KAAX,GAAmB,EAA1B,EAA8Ba,KAA9B,CAAoC,CAAC,CAArC,CAAP;AACD;;AACDC,EAAAA,UAAU,GAAG;AACX,WAAQC,IAAI,CAACC,KAAL,CAAW,KAAKjB,KAAL,CAAWC,KAAX,GAAmB,EAA9B,CAAR;AACD;;AAEDO,EAAAA,UAAU,GAAI;AACZ,QAAIU,KAAK,GAAG,IAAZ;;AACA,QAAI,KAAKlB,KAAL,CAAWE,UAAf,EACA;AACE;AACD;;AACD,UAAMA,UAAU,GAAGiB,WAAW,CAAC,YAAW;AACxCD,MAAAA,KAAK,CAACR,QAAN,CAAeV,KAAK,KAAK;AACvBC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AADE,OAAL,CAApB;AAGD,KAJ6B,EAI3B,IAJ2B,CAA9B;AAKA,SAAKS,QAAL,CAAc;AAACR,MAAAA;AAAD,KAAd;AACD;;AAEDkB,EAAAA,MAAM,GAAG;AACP,WAEE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,KAAKL,UAAL,EAAtB,OAA0C,KAAKF,UAAL,EAA1C,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKb,KAAL,CAAWI,SAAX,GAAuB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,GAAiC,IADlC,CAFF,CAFF;AAUD;;AAjEmD","sourcesContent":["import React,{Component} from 'react';  \r\nimport Result from '../Result';\r\n  export default class ClockInterface extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        count: 60 * 0.05,\r\n        myInterval: undefined,\r\n        condition:false\r\n      }\r\n    //   this.handleLoad  = this.handleLoad(this);\r\n    \r\n    };\r\n    \r\n\r\n    componentDidMount() {\r\n        window.addEventListener('load', this.handleLoad(this));\r\n    }\r\n\r\n\r\n    displayModalPopUp()\r\n    {\r\n        this.setState({condition:true});\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.state.count <= 0){\r\n            clearInterval(this.state.myInterval);\r\n            if(this.state.condition === false)\r\n            {\r\n            this.displayModalPopUp();\r\n            }\r\n        }\r\n    }\r\n\r\n    getSeconds() {\r\n      return ('0' + this.state.count % 60).slice(-2)\r\n    };\r\n    getMinutes() {\r\n      return (Math.floor(this.state.count / 60) )\r\n    };\r\n  \r\n    handleLoad () {\r\n      var _this = this;\r\n      if (this.state.myInterval) \r\n      {\r\n        return\r\n      }\r\n      const myInterval = setInterval(function() {\r\n        _this.setState(state => ({\r\n          count: state.count - 1\r\n        }))\r\n      }, 1000)\r\n      this.setState({myInterval})\r\n    };\r\n    \r\n    render() {\r\n      return (\r\n        \r\n        <div id='container'>\r\n          <h1 id='clockdigits'>{this.getMinutes()}:{this.getSeconds()}</h1>\r\n          <div>\r\n          {this.state.condition ? <Result/>:null}\r\n        </div>\r\n        </div>\r\n    \r\n      );\r\n    }\r\n  }\r\n  \r\n  "]},"metadata":{},"sourceType":"module"}