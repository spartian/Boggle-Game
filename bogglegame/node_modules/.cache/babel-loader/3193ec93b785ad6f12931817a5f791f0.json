{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pratik\\\\ReactFrontEnd\\\\bogglegame\\\\src\\\\components\\\\Result\\\\index.js\";\nimport React, { Component } from 'react';\nimport './Result.css'; // import popup  from 'reactjs-popup'\n// import Popup from 'reactjs-popup';\n\nimport Modal from 'react-modal'; // import { ModalHeader, ModalBody } from 'react-bootstrap';\n\nexport default class Result extends Component {\n  constructor() {\n    super();\n    this.state = {\n      modalIsOpen: true\n    };\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  openModal() {\n    this.setState({\n      modalIsOpen: true\n    });\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      closeModal: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Result\")), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Pratik/ReactFrontEnd/bogglegame/src/components/Result/index.js"],"names":["React","Component","Modal","Result","constructor","state","modalIsOpen","openModal","bind","afterOpenModal","closeModal","setState","subtitle","style","color","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,cAAP,C,CACA;AACA;;AAEA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AAKA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA8B;AAE3CG,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAIA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEHD,EAAAA,SAAS,GAAG;AACV,SAAKI,QAAL,CAAc;AAACL,MAAAA,WAAW,EAAE;AAAd,KAAd;AACD;;AAEDG,EAAAA,cAAc,GAAG;AACf;AACA,SAAKG,QAAL,CAAcC,KAAd,CAAoBC,KAApB,GAA4B,MAA5B;AACD;;AAEDJ,EAAAA,UAAU,GAAG;AACX,SAAKC,QAAL,CAAc;AAACL,MAAAA,WAAW,EAAE;AAAd,KAAd;AACD;;AAEGS,EAAAA,MAAM,GAAG;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,KAAD;AACA,MAAA,MAAM,EAAE,KAAKV,KAAL,CAAWC,WADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA,oBAAC,WAAD;AAAa,MAAA,UAAU,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAHA,EAMA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,CAFA,CADF;AAoBD;;AAhDsC","sourcesContent":["import React,{Component} from 'react';  \r\nimport './Result.css'\r\n// import popup  from 'reactjs-popup'\r\n// import Popup from 'reactjs-popup';\r\n\r\nimport Modal from 'react-modal';\r\n// import { ModalHeader, ModalBody } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nexport default class Result extends Component{\r\n\r\n  constructor() {\r\n    super();\r\n \r\n    this.state = {\r\n      modalIsOpen: true\r\n    };\r\n \r\n    this.openModal = this.openModal.bind(this);\r\n    this.afterOpenModal = this.afterOpenModal.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\nopenModal() {\r\n  this.setState({modalIsOpen: true});\r\n}\r\n\r\nafterOpenModal() {\r\n  // references are now sync'd and can be accessed.\r\n  this.subtitle.style.color = '#f00';\r\n}\r\n\r\ncloseModal() {\r\n  this.setState({modalIsOpen: false});\r\n}\r\n  \r\n    render() {\r\n        return (\r\n          <div>\r\n            \r\n          <Modal\r\n          isOpen={this.state.modalIsOpen}>\r\n          \r\n          <ModalHeader closeModal=\"true\">\r\n            <title>Result</title>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n\r\n          </ModalBody>\r\n\r\n \r\n         \r\n          {/* <button onClick={this.closeModal}>close</button> */}\r\n          \r\n        </Modal>\r\n        </div>\r\n        );\r\n      }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}