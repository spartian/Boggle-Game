{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pratik\\\\ReactFrontEnd\\\\bogglegame\\\\src\\\\components\\\\ScoreBox\\\\TotalScore.js\";\nimport React, { useState } from 'react';\n\nconst TotalScore = ({\n  props\n}) => {\n  // TODO: Destructure TotalScore props\n  const [totalScore, label] = props;\n\n  props = text => renderText(text);\n\n  function renderText(text) {\n    label(text);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"total-score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, label), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, totalScore));\n};\n\nexport default TotalScore; // const FuncComponent = ({ forwardRef }) => {\n//   const [text, setText] = useState('functional component');\n//   forwardRef((text) => renderText(text));\n//   function renderText(text) {\n//     setText(text);\n//   }","map":{"version":3,"sources":["C:/Users/Pratik/ReactFrontEnd/bogglegame/src/components/ScoreBox/TotalScore.js"],"names":["React","useState","TotalScore","props","totalScore","label","text","renderText"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AACA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC9B;AACA,QAAM,CAACC,UAAD,EAAaC,KAAb,IAAsBF,KAA5B;;AAEAA,EAAAA,KAAK,GAAIG,IAAD,IAAUC,UAAU,CAACD,IAAD,CAA5B;;AAEA,WAASC,UAAT,CAAoBD,IAApB,EAA0B;AACxBD,IAAAA,KAAK,CAACC,IAAD,CAAL;AACD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,UAAP,CAJF,CADF;AAQD,CAjBD;;AAmBA,eAAeF,UAAf,C,CAEA;AACA;AAEA;AAEA;AACA;AACA","sourcesContent":["import React,{useState} from 'react';\nconst TotalScore = ({props}) => {\n  // TODO: Destructure TotalScore props\n  const [totalScore, label] = props;\n  \n  props = (text) => renderText(text);\n\n  function renderText(text) {\n    label(text);\n  }\n  return (\n    <div className=\"total-score\">\n      {/* TODO: Render label */}\n      <h2>{label}</h2>\n      {/* TODO: Render totalScore */}\n      <span>{totalScore}</span>\n    </div>\n  );\n};\n\nexport default TotalScore;\n\n// const FuncComponent = ({ forwardRef }) => {\n//   const [text, setText] = useState('functional component');\n\n//   forwardRef((text) => renderText(text));\n\n//   function renderText(text) {\n//     setText(text);\n//   }\n"]},"metadata":{},"sourceType":"module"}