{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pratik\\\\ReactFrontEnd\\\\bogglegame\\\\src\\\\components\\\\Game\\\\index.js\";\nimport React, { Component } from 'react';\nimport { shuffledGrid // copyBoard,\n// isTileEqual,\n// isAdjacent,\n, calculateScore } from '../../util/gameUtil';\nimport Board from '../Board';\nimport ScoreBox from '../ScoreBox'; // import CurrentWord from '../CurrentWord';\n\nimport Button from '../Button';\nimport './Game.css'; //Again like in App.js since {component} was imported then in the below line it is written as extends Component\n//otherwise it should be written as extends React.Component\n\nexport default class Game extends Component {\n  constructor(props) {\n    super(props); // TODO: Init board with random tiles\n\n    this.initGrid = shuffledGrid(); // TODO: Init state with the board\n\n    this.state = {\n      board: this.initGrid,\n      currentWord: '',\n      currentWordPosition: [],\n      wordScoreList: {},\n      currentLetter: ''\n    };\n  } // Adds Current Word to the Word List\n\n\n  handleSubmit(word) {\n    // TODO: Check if Current Word is valid\n    // Check if word is valid\n    if (word.length < 3 || this.state.wordScoreList[word]) {\n      return;\n    } // TODO: Calculate score\n\n\n    const score = calculateScore(word); // TODO: Unselect all tiles.\n\n    const clearedBoard = this.initGrid; // TODO: Add to the Word List\n\n    this.setState({\n      // wordScoreList: Object.assign(this.state.wordScoreList, {[word]: score}),\n      wordScoreList: { ...this.state.wordScoreList,\n        [word]: score\n      },\n      currentWord: '',\n      currentWordPosition: [],\n      board: clearedBoard\n    });\n  }\n\n  handleChange(value, this1) {\n    this1.setState({\n      currentWord: value\n    });\n  }\n\n  handleKeyPress(keyPressed, this2) {\n    if (keyPressed.keyCode >= 65 && keyPressed.keyCode <= 90 || keyPressed.keyCode >= 97 && keyPressed.keyCode <= 122) {\n      let letter = keyPressed.key;\n      this2.setState({\n        currentLetter: letter\n      }); // this.handleChange(keyPressed.target.value,this2);\n    } else {\n      alert(\"only alphabetic characters are allowed\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Board, {\n      board: this.state.board,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"word-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"current-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Current Word\"), React.createElement(\"div\", {\n      className: \"current-word\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onKeyDown: e => this.handleKeyPress(e, this),\n      onChange: e => this.handleChange(e.target.value, this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))), React.createElement(Button // TODO: Pass Button Props and Button Callback\n    , {\n      handleSubmit: this.handleSubmit.bind(this, this.state.currentWord),\n      label: \"SUBMIT WORD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(ScoreBox // TODO: Pass ScoreBox Props\n    , {\n      wordScoreList: this.state.wordScoreList,\n      totalScore: Object.values(this.state.wordScoreList).reduce((totalScore, next) => {\n        return totalScore + next;\n      }, 0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"clear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Pratik/ReactFrontEnd/bogglegame/src/components/Game/index.js"],"names":["React","Component","shuffledGrid","calculateScore","Board","ScoreBox","Button","Game","constructor","props","initGrid","state","board","currentWord","currentWordPosition","wordScoreList","currentLetter","handleSubmit","word","length","score","clearedBoard","setState","handleChange","value","this1","handleKeyPress","keyPressed","this2","keyCode","letter","key","alert","render","e","target","bind","Object","values","reduce","totalScore","next"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  shuffledGrid,\n  // copyBoard,\n  // isTileEqual,\n  // isAdjacent,\n  calculateScore\n} from '../../util/gameUtil';\nimport Board from '../Board';\nimport ScoreBox from '../ScoreBox';\n// import CurrentWord from '../CurrentWord';\nimport Button from '../Button';\nimport './Game.css';\n\n//Again like in App.js since {component} was imported then in the below line it is written as extends Component\n//otherwise it should be written as extends React.Component\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n    // TODO: Init board with random tiles\n    this.initGrid = shuffledGrid();\n    // TODO: Init state with the board\n    this.state = {\n      board: this.initGrid,\n      currentWord: '',\n      currentWordPosition: [],\n      wordScoreList: {},\n      currentLetter:''\n    };\n  }\n\n  \n\n\n  // Adds Current Word to the Word List\n  handleSubmit(word) {\n    // TODO: Check if Current Word is valid\n\n    // Check if word is valid\n    if (word.length < 3 || this.state.wordScoreList[word]) {\n      return;\n    }\n    // TODO: Calculate score\n    const score = calculateScore(word);\n\n    // TODO: Unselect all tiles.\n    const clearedBoard = this.initGrid;\n\n    // TODO: Add to the Word List\n    this.setState({\n      // wordScoreList: Object.assign(this.state.wordScoreList, {[word]: score}),\n      wordScoreList: { ...this.state.wordScoreList, [word]: score },\n      currentWord: '',\n      currentWordPosition: [],\n      board: clearedBoard\n    });\n  \n  }\n\n  handleChange(value,this1)\n  {\n    this1.setState({currentWord:value});\n  }\n\n  handleKeyPress(keyPressed,this2)\n  {\n    if ((keyPressed.keyCode >= 65 && keyPressed.keyCode <= 90) || (keyPressed.keyCode >= 97 && keyPressed.keyCode <= 122))\n    {\n      let letter = keyPressed.key;\n      this2.setState({currentLetter:letter});\n      // this.handleChange(keyPressed.target.value,this2);\n    }\n    else\n    {\n      alert(\"only alphabetic characters are allowed\");\n    }\n    \n  }\n  render() {\n    return (\n      <div>\n        <div className=\"game-area\">\n          <Board\n            board={this.state.board}\n          />\n\n          {/* <CurrentWord currentWord={this.state.currentWord}  label=\"Current Word\"> */}\n          {/* </CurrentWord> */}\n\n          <div className=\"word-area\">\n            <div className=\"current-header\">\n              Current Word\n            </div>\n           <div className=\"current-word\">\n            <input type=\"text\" \n            onKeyDown = {(e) =>  this.handleKeyPress(e,this)} \n            onChange={(e) => this.handleChange(e.target.value,this)} \n            />\n            </div>\n          </div>\n          \n           \n          \n          <Button\n            // TODO: Pass Button Props and Button Callback\n            handleSubmit={this.handleSubmit.bind(this, this.state.currentWord)}\n            label=\"SUBMIT WORD\"\n          />\n        </div>\n\n        <ScoreBox\n          // TODO: Pass ScoreBox Props\n          wordScoreList={this.state.wordScoreList}\n          totalScore={Object.values(\n            this.state.wordScoreList\n          ).reduce((totalScore, next) => {\n            return totalScore + next;\n          }, 0)}\n        />\n        {/* Makes Board and ScoreBox be side by side */}\n        <div className=\"clear\" />\n\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}