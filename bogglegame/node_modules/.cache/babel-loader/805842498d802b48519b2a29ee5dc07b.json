{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pratik\\\\ReactFrontEnd\\\\bogglegame\\\\src\\\\components\\\\ScoreBox\\\\WordScoreList.js\";\nimport React, { useRef, useEffect } from 'react';\nimport TotalScore from './TotalScore';\nconst WordScoreList = React.forwardRef((props, ref) => {\n  function getAlert() {\n    alert(\"getAlert from Child\");\n  } // TODO: Destructure WordScoreList props\n\n\n  const {\n    wordScoreList,\n    totalScore\n  } = props;\n  const words = Object.keys(wordScoreList);\n  const wordsList = words.map(function (word, index) {\n    return React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, word);\n  });\n  const scores = Object.values(wordScoreList);\n  const scoresList = scores.map(function (score, index) {\n    return React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, score);\n  }); // const onButtonClick = () => {\n  //   // `current` points to the mounted text input element\n  //   ref1.current.focus();\n  // };\n  // useEffect(() => ref1.current && ref1.current.focus());\n\n  return React.createElement(\"div\", {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"word-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"words\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"WORD\"), wordsList), React.createElement(\"div\", {\n    className: \"scores\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"SCORE\"), scoresList)), React.createElement(TotalScore // TODO: Pass TotalScore props\n  , {\n    totalScore: totalScore,\n    label: \"Total Score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n});\nexport default WordScoreList;","map":{"version":3,"sources":["C:/Users/Pratik/ReactFrontEnd/bogglegame/src/components/ScoreBox/WordScoreList.js"],"names":["React","useRef","useEffect","TotalScore","WordScoreList","forwardRef","props","ref","getAlert","alert","wordScoreList","totalScore","words","Object","keys","wordsList","map","word","index","scores","values","scoresList","score"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAwC,OAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,MAAMC,aAAa,GAAGJ,KAAK,CAACK,UAAN,CAAiB,CAACC,KAAD,EAAOC,GAAP,KAAe;AAEpD,WAASC,QAAT,GAAoB;AAClBC,IAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,GAJmD,CAMpD;;;AACA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAgCL,KAAtC;AACA,QAAMM,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,aAAZ,CAAd;AAEA,QAAMK,SAAS,GAAGH,KAAK,CAACI,GAAN,CAAU,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAChD,WAAO;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,IAAjB,CAAP;AACD,GAFiB,CAAlB;AAGA,QAAME,MAAM,GAAGN,MAAM,CAACO,MAAP,CAAcV,aAAd,CAAf;AACA,QAAMW,UAAU,GAAGF,MAAM,CAACH,GAAP,CAAW,UAASM,KAAT,EAAgBJ,KAAhB,EAAuB;AACnD,WAAO;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBI,KAAjB,CAAP;AACD,GAFkB,CAAnB,CAdoD,CAoBpD;AACA;AACA;AACA;AACA;;AAEA,SACE;AAAK,IAAA,GAAG,EAAEf,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGQ,SAHH,CADF,EAME;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAGGM,UAHH,CANF,CAFF,EAcE,oBAAC,UAAD,CACE;AADF;AAEE,IAAA,UAAU,EAAEV,UAFd;AAGE,IAAA,KAAK,EAAC,aAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAsBD,CAhDqB,CAAtB;AAkDA,eAAeP,aAAf","sourcesContent":["import React,{ useRef, useEffect } from 'react';\nimport TotalScore from './TotalScore';\nconst WordScoreList = React.forwardRef((props,ref) => {\n  \n  function getAlert() {\n    alert(\"getAlert from Child\");\n  }\n  \n  // TODO: Destructure WordScoreList props\n  const { wordScoreList, totalScore } = props;\n  const words = Object.keys(wordScoreList);\n\n  const wordsList = words.map(function(word, index) {\n    return <li key={index}>{word}</li>;\n  });\n  const scores = Object.values(wordScoreList);\n  const scoresList = scores.map(function(score, index) {\n    return <li key={index}>{score}</li>;\n  });\n\n  \n\n  // const onButtonClick = () => {\n  //   // `current` points to the mounted text input element\n  //   ref1.current.focus();\n  // };\n  // useEffect(() => ref1.current && ref1.current.focus());\n\n  return (\n    <div ref={ref}>\n      \n      <div className=\"word-list\">\n        <div className=\"words\">\n          <h2>WORD</h2>\n          {/* TODO: Render wordList array */}\n          {wordsList}\n        </div>\n        <div className=\"scores\">\n          <h2>SCORE</h2>\n          {/* TODO: Render scoreList array */}\n          {scoresList}\n        </div>\n      </div>\n      <TotalScore\n        // TODO: Pass TotalScore props\n        totalScore={totalScore}\n        label=\"Total Score\"\n      />\n    </div>\n  );\n});\n\nexport default WordScoreList;"]},"metadata":{},"sourceType":"module"}