{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pratik\\\\ReactFrontEnd\\\\bogglegame\\\\src\\\\components\\\\Game\\\\index.js\";\nimport React, { Component } from 'react';\nimport { shuffledGrid // copyBoard,\n// isTileEqual,\n// isAdjacent,\n, calculateScore } from '../../util/gameUtil';\nimport Board from '../Board';\nimport ScoreBox from '../ScoreBox'; // import CurrentWord from '../CurrentWord';\n\nimport Button from '../Button';\nimport './Game.css'; //Again like in App.js since {component} was imported then in the below line it is written as extends Component\n//otherwise it should be written as extends React.Component\n\nexport default class Game extends Component {\n  constructor(props) {\n    super(props); // TODO: Init board with random tiles\n\n    this.handleChange = e => {\n      alert(\"2\");\n      this.setState({\n        currentWord: e.target.value\n      });\n    };\n\n    this.handleKeyPress = e => {\n      alert(\"5\");\n\n      if (e.key.keyCode >= 65 && e.key.keyCode <= 90 || e.key.keyCode >= 97 && e.key.keyCode <= 122) {\n        let letter = e.key;\n        this.setState({\n          currentLetter: letter\n        });\n      } else {\n        alert(\"only alphabetic characters are allowed\");\n      }\n    };\n\n    this.initGrid = shuffledGrid(); // TODO: Init state with the board\n\n    this.state = {\n      board: this.initGrid,\n      currentWord: '',\n      currentWordPosition: [],\n      wordScoreList: {},\n      currentLetter: ''\n    };\n  } // Adds Current Word to the Word List\n\n\n  handleSubmit(word) {\n    // TODO: Check if Current Word is valid\n    // Check if word is valid\n    if (word.length < 3 || this.state.wordScoreList[word]) {\n      return;\n    } // TODO: Calculate score\n\n\n    const score = calculateScore(word); // TODO: Unselect all tiles.\n\n    const clearedBoard = this.initGrid; // TODO: Add to the Word List\n\n    this.setState({\n      // wordScoreList: Object.assign(this.state.wordScoreList, {[word]: score}),\n      wordScoreList: { ...this.state.wordScoreList,\n        [word]: score\n      },\n      currentWord: '',\n      currentWordPosition: [],\n      board: clearedBoard\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Board, {\n      board: this.state.board,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"word-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"current-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Current Word\"), React.createElement(\"div\", {\n      className: \"current-word\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      onKeyPress: this.onKeyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(Button // TODO: Pass Button Props and Button Callback\n    , {\n      handleSubmit: this.handleSubmit.bind(this, this.state.currentWord),\n      label: \"SUBMIT WORD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(ScoreBox // TODO: Pass ScoreBox Props\n    , {\n      wordScoreList: this.state.wordScoreList,\n      totalScore: Object.values(this.state.wordScoreList).reduce((totalScore, next) => {\n        return totalScore + next;\n      }, 0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"clear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Pratik/ReactFrontEnd/bogglegame/src/components/Game/index.js"],"names":["React","Component","shuffledGrid","calculateScore","Board","ScoreBox","Button","Game","constructor","props","handleChange","e","alert","setState","currentWord","target","value","handleKeyPress","key","keyCode","letter","currentLetter","initGrid","state","board","currentWordPosition","wordScoreList","handleSubmit","word","length","score","clearedBoard","render","onKeyPress","bind","Object","values","reduce","totalScore","next"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  shuffledGrid,\n  // copyBoard,\n  // isTileEqual,\n  // isAdjacent,\n  calculateScore\n} from '../../util/gameUtil';\nimport Board from '../Board';\nimport ScoreBox from '../ScoreBox';\n// import CurrentWord from '../CurrentWord';\nimport Button from '../Button';\nimport './Game.css';\n\n//Again like in App.js since {component} was imported then in the below line it is written as extends Component\n//otherwise it should be written as extends React.Component\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n    // TODO: Init board with random tiles\n    this.initGrid = shuffledGrid();\n    // TODO: Init state with the board\n    this.state = {\n      board: this.initGrid,\n      currentWord: '',\n      currentWordPosition: [],\n      wordScoreList: {},\n      currentLetter:''\n    };\n  }\n\n  \n\n\n  // Adds Current Word to the Word List\n  handleSubmit(word) {\n    // TODO: Check if Current Word is valid\n\n    // Check if word is valid\n    if (word.length < 3 || this.state.wordScoreList[word]) {\n      return;\n    }\n    // TODO: Calculate score\n    const score = calculateScore(word);\n\n    // TODO: Unselect all tiles.\n    const clearedBoard = this.initGrid;\n\n    // TODO: Add to the Word List\n    this.setState({\n      // wordScoreList: Object.assign(this.state.wordScoreList, {[word]: score}),\n      wordScoreList: { ...this.state.wordScoreList, [word]: score },\n      currentWord: '',\n      currentWordPosition: [],\n      board: clearedBoard\n    });\n  \n  }\n\n  handleChange = (e) =>\n  {\n    alert(\"2\");\n    this.setState({currentWord:e.target.value});\n  }\n\n  handleKeyPress = (e) =>\n  {\n    alert(\"5\");\n    if ((e.key.keyCode >= 65 && e.key.keyCode <= 90) || (e.key.keyCode >= 97 && e.key.keyCode <= 122))\n    {\n      let letter = e.key;\n      this.setState({currentLetter:letter});\n    }\n    else\n    {\n      alert(\"only alphabetic characters are allowed\");\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"game-area\">\n          <Board\n            board={this.state.board}\n          />\n\n          {/* <CurrentWord currentWord={this.state.currentWord}  label=\"Current Word\"> */} \n          {/* {/* </CurrentWord> */}\n\n          <div className=\"word-area\">\n            <div className=\"current-header\">\n              Current Word\n            </div>\n           <div className=\"current-word\">\n           \n            <input type=\"text\" onChange= {this.handleChange}\n            onKeyPress = {this.onKeyPress}\n            ></input>\n              {/* onChange={(e) => this.handleChange}\n             value={this.state.currentWord}  */}\n            \n\n        \n            \n            </div>\n          </div>\n          \n           \n          \n          <Button\n            // TODO: Pass Button Props and Button Callback\n            handleSubmit={this.handleSubmit.bind(this, this.state.currentWord)}\n            label=\"SUBMIT WORD\"\n          />\n        </div>\n\n        <ScoreBox\n          // TODO: Pass ScoreBox Props\n          wordScoreList={this.state.wordScoreList}\n          totalScore={Object.values(\n            this.state.wordScoreList\n          ).reduce((totalScore, next) => {\n            return totalScore + next;\n          }, 0)}\n        />\n        {/* Makes Board and ScoreBox be side by side */}\n        <div className=\"clear\" />\n\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}